	global main

	section .text

main:
main..main.entry:
	push rbp
	mov rbp,rsp
	sub rsp,112
	mov r8,[___N]
	mov dword [rbp-16],r8
	call __init
	mov r8,[___N]
	mov dword [rbp-16],r8
	mov r8,0
	mov dword [rbp-8],r8
	mov r8,1
	mov dword [rbp-40],r8
	jmp main..while_cond
main..while_cond:
	mov r8,dword [rbp-40]
	mov r9,dword [rbp-16]
	cmp r8,r9
	mov r10,0
	setle r10b
	mov dword [rbp-24],r10
	mov r8,dword [rbp-24]
	cmp r8,1
	jz main..while_loop
	jnz main..while_after
main..while_loop:
	mov r8,dword [rbp-8]
	mov r9,r8
	mov dword [rbp-32],r9
	mov r8,dword [rbp-8]
	add r8,1
	mov dword [rbp-8],r8
	mov r8,dword [rbp-8]
	mov r9,r8
	mov dword [rbp-48],r9
	mov r8,dword [rbp-32]
	mov r9,r8
	mov dword [rbp-8],r9
	mov r8,dword [rbp-48]
	mov r9,r8
	mov dword [rbp-8],r9
	mov r8,dword [rbp-40]
	mov r9,r8
	mov dword [rbp-56],r9
	mov r8,dword [rbp-40]
	add r8,1
	mov dword [rbp-40],r8
	jmp main..while_cond
main..while_after:
	mov r8,dword [rbp-8]
	mov rax,r8
	leave
	ret

__init:
__init.._init.entry:
	push rbp
	mov rbp,rsp
	sub rsp,64
	mov r8,[___N]
	mov dword [rbp-8],r8
	mov r8,10000
	mov dword [rbp-8],r8
	mov r8,dword [rbp-8]
	mov [___N],r8
	leave
	ret

	section .data

	section .bss
___N:
	resb 64
