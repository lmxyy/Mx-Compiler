space @a 8
space @i 8
space @j 8
space @b 8

func rec $this {

%rec.entry:
    ret 0

}

func printNum $num {

%printNum.entry:
    call printlnint $num 
    ret 0

}

func main {

%main.entry:
    call _init 
    @i = move 0
    jump %for_cond

%for_cond:
    $t = slt @i 4
    br $t %for_loop %for_after

%for_after:
    @i = move 0
    jump %for_cond_2

%for_cond_2:
    $t_2 = slt @i 4
    br $t_2 %for_loop_2 %for_after_2

%for_loop_2:
    @j = move 0
    jump %for_cond_3

%for_cond_3:
    $t_3 = slt @j 10
    br $t_3 %for_loop_3 %for_after_3

%for_after_3:
    jump %for_step

%for_step:
    $t_4 = move @i
    @i = add @i 1
    jump %for_cond_2

%for_loop_3:
    $t_5 = mul @i 8
    $t_5 = add @a $t_5
    $t_5 = load 8 $t_5 8
    $t_6 = mul @j 8
    $t_6 = add $t_5 $t_6
    store 8 $t_6 888 8
    jump %for_step_2

%for_step_2:
    $t_7 = move @j
    @j = add @j 1
    jump %for_cond_3

%for_after_2:
    @i = move 0
    jump %for_cond_4

%for_cond_4:
    $t_8 = slt @i 5
    br $t_8 %for_loop_4 %for_after_4

%for_loop_4:
    $newaddress = alloc 16
    call rec $newaddress 
    $t_9 = mul @i 8
    $t_9 = add @b $t_9
    store 8 $t_9 $newaddress 8
    $t_10 = neg 1
    $t_11 = mul @i 8
    $t_11 = add @b $t_11
    $t_11 = load 8 $t_11 8
    store 8 $t_11 $t_10 0
    jump %for_step_3

%for_step_3:
    $t_12 = move @i
    @i = add @i 1
    jump %for_cond_4

%for_after_4:
    $t_13 = add @a 24
    $t_13 = load 8 $t_13 8
    $t_14 = add $t_13 72
    $t_14 = load 8 $t_14 8
    $t_15 = call printNum $t_14 
    @i = move 0
    jump %for_cond_5

%for_cond_5:
    $t_16 = sle @i 3
    br $t_16 %for_loop_5 %for_after_5

%for_after_5:
    @i = move 0
    jump %for_cond_6

%for_cond_6:
    $t_17 = sle @i 3
    br $t_17 %for_loop_6 %for_after_6

%for_loop_6:
    @j = move 0
    jump %for_cond_7

%for_cond_7:
    $t_18 = sle @j 9
    br $t_18 %for_loop_7 %for_after_7

%for_after_7:
    jump %for_step_4

%for_step_4:
    $t_19 = move @i
    @i = add @i 1
    jump %for_cond_6

%for_loop_7:
    $t_20 = mul @i 8
    $t_20 = add @a $t_20
    $t_20 = load 8 $t_20 8
    $t_21 = mul @j 8
    $t_21 = add $t_20 $t_21
    $t_21 = load 8 $t_21 8
    $t_22 = call printNum $t_21 
    jump %for_step_5

%for_step_5:
    $t_23 = move @j
    @j = add @j 1
    jump %for_cond_7

%for_after_6:
    $t_24 = add @a 16
    $t_24 = load 8 $t_24 8
    $t_25 = add $t_24 80
    store 8 $t_25 0 8
    $t_26 = add @a 16
    $t_26 = load 8 $t_26 8
    $t_27 = add $t_26 80
    $t_27 = load 8 $t_27 8
    $t_28 = call printNum $t_27 
    $t_29 = neg 2
    $t_30 = add @b 0
    $t_30 = load 8 $t_30 8
    store 8 $t_30 $t_29 0
    $t_31 = neg 10
    $t_32 = add @a 16
    $t_32 = load 8 $t_32 8
    $t_33 = add $t_32 80
    $t_33 = load 8 $t_33 8
    $t_34 = mul $t_33 8
    $t_34 = add @b $t_34
    $t_34 = load 8 $t_34 8
    store 8 $t_34 $t_31 0
    $t_35 = add @b 0
    $t_35 = load 8 $t_35 8
    $t_36 = load 8 $t_35 0
    $t_37 = call printNum $t_36 
    $t_38 = add @b 8
    $t_38 = load 8 $t_38 8
    $t_39 = load 8 $t_38 0
    $t_40 = call printNum $t_39 
    ret 0

%for_loop_5:
    @j = move 0
    jump %for_cond_8

%for_cond_8:
    $t_41 = sle @j 9
    br $t_41 %for_loop_8 %for_after_8

%for_loop_8:
    $t_42 = mul @i 10
    $t_43 = add $t_42 @j
    $t_44 = mul @i 8
    $t_44 = add @a $t_44
    $t_44 = load 8 $t_44 8
    $t_45 = mul @j 8
    $t_45 = add $t_44 $t_45
    store 8 $t_45 $t_43 8
    jump %for_step_6

%for_step_6:
    $t_46 = move @j
    @j = add @j 1
    jump %for_cond_8

%for_after_8:
    jump %for_step_7

%for_step_7:
    $t_47 = move @i
    @i = add @i 1
    jump %for_cond_5

%for_loop:
    $newaddress_2 = move 96
    $newaddress_2 = alloc $newaddress_2
    store 8 $newaddress_2 11 0
    $t_48 = mul @i 8
    $t_48 = add @a $t_48
    store 8 $t_48 $newaddress_2 8
    jump %for_step_8

%for_step_8:
    $t_49 = move @i
    @i = add @i 1
    jump %for_cond

}

func _init {

%_init.entry:
    $newaddress = move 40
    $newaddress = alloc $newaddress
    store 8 $newaddress 4 0
    @a = move $newaddress
    @i = move 0
    @j = move 0
    $newaddress_2 = move 48
    $newaddress_2 = alloc $newaddress_2
    store 8 $newaddress_2 5 0
    @b = move $newaddress_2
    ret 0

}

