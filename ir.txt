space @init_anger 8
space @work_anger 8
asciiz @string , 
asciiz @string_2  enjoys this work. XD
asciiz @string_3  wants to give up!!!!!
asciiz @string_4 the leading TA
asciiz @string_5 the striking TA
asciiz @string_6 MR
asciiz @string_7 Mars

func TA $this {

%TA.entry:
    ret 0

}

func work $st $ta {

%work.entry:
    $t = load 8 $ta 8
    $t_2 = sle $t 100
    br $t_2 %if_true %if_false

%if_true:
    call print $st 
    call print @string 
    $t_3 = load 8 $ta 0
    call print $t_3 
    call println @string_2 
    jump %if_after

%if_false:
    call print $st 
    call print @string 
    $t_4 = load 8 $ta 0
    call print $t_4 
    call println @string_3 
    jump %if_after

%if_after:
    $t_5 = load 8 $ta 8
    $t_6 = add $t_5 @work_anger
    store 8 $ta $t_6 8
    ret 0

}

func main {

%main.entry:
    call _init 
    $mr = move 0
    $mars = move 0
    $newaddress = alloc 16
    call TA $newaddress 
    $mr = move $newaddress
    store 8 $mr @string_4 0
    store 8 $mr 0 8
    $newaddress_2 = alloc 16
    call TA $newaddress_2 
    $mars = move $newaddress_2
    store 8 $mars @string_5 0
    store 8 $mars @init_anger 8
    $t = call work @string_6 $mr 
    $t_2 = call work @string_7 $mars 
    $t_3 = call work @string_7 $mars 
    ret 0

}

func _init {

%_init.entry:
    @init_anger = move 100
    @work_anger = move 10
    ret 0

}

