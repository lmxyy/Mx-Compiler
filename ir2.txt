space @asciiTable 8
space @MAXCHUNK 8
space @MAXLENGTH 8
space @chunks 8
space @inputBuffer 8
space @outputBuffer 8
asciiz @string  !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~
asciiz @string_2 
asciiz @string_3 nChunk > MAXCHUNK!

func hex2int $x {

%hex2int.entry:
    $i = move 0
    $result = move 0
    $i = move 0
    jump %for_cond

%for_cond:
    $size = load 8 $x 0
    $t = slt $i $size
    br $t %for_loop %for_after

%for_loop:
    $ord = call string.ord $x $i 
    $digit = move $ord
    $t_2 = sge $digit 48
    br $t_2 %lhs_true %lhs_false

%lhs_false:
    $t_3 = move 0
    jump %lhs_merge

%lhs_true:
    $t_4 = sle $digit 57
    $t_3 = move $t_4
    jump %lhs_merge

%lhs_merge:
    br $t_3 %if_true %if_false

%if_false:
    $t_5 = sge $digit 65
    br $t_5 %lhs_true_2 %lhs_false_2

%lhs_false_2:
    $t_6 = move 0
    jump %lhs_merge_2

%lhs_true_2:
    $t_7 = sle $digit 70
    $t_6 = move $t_7
    jump %lhs_merge_2

%lhs_merge_2:
    br $t_6 %if_true_2 %if_false_2

%if_false_2:
    $t_8 = sge $digit 97
    br $t_8 %lhs_true_3 %lhs_false_3

%lhs_true_3:
    $t_9 = sle $digit 102
    $t_10 = move $t_9
    jump %lhs_merge_3

%lhs_false_3:
    $t_10 = move 0
    jump %lhs_merge_3

%lhs_merge_3:
    br $t_10 %if_true_3 %if_false_3

%if_false_3:
    $returnValue = move 0
    jump %hex2int.exit

%if_true_3:
    $t_11 = mul $result 16
    $t_12 = add $t_11 $digit
    $t_13 = sub $t_12 97
    $t_14 = add $t_13 10
    $result = move $t_14
    jump %if_after

%if_after:
    jump %if_after_2

%if_true_2:
    $t_15 = mul $result 16
    $t_16 = add $t_15 $digit
    $t_17 = sub $t_16 65
    $t_18 = add $t_17 10
    $result = move $t_18
    jump %if_after_2

%if_after_2:
    jump %if_after_3

%if_true:
    $t_19 = mul $result 16
    $t_20 = add $t_19 $digit
    $t_21 = sub $t_20 48
    $result = move $t_21
    jump %if_after_3

%if_after_3:
    jump %for_step

%for_step:
    $t_22 = move $i
    $i = add $i 1
    jump %for_cond

%for_after:
    $returnValue = move $result
    jump %hex2int.exit

%hex2int.exit:
    ret $returnValue

}

func sha1 $input $length {

%sha1.entry:
    $t = add $length 64
    $t_2 = sub $t 56
    $t_3 = div $t_2 64
    $t_4 = add $t_3 1
    $nChunk = move $t_4
    $t_5 = sgt $nChunk @MAXCHUNK
    br $t_5 %if_true_4 %if_after_4

%if_true_4:
    call println @string_3 
    $returnValue = move 0
    jump %sha1.exit

%if_after_4:
    $i = move 0
    $j = move 0
    $i = move 0
    jump %for_cond_2

%for_cond_2:
    $t_6 = slt $i $nChunk
    br $t_6 %for_loop_2 %for_after_2

%for_loop_2:
    $j = move 0
    jump %for_cond_3

%for_cond_3:
    $t_7 = slt $j 80
    br $t_7 %for_loop_3 %for_after_3

%for_after_3:
    jump %for_step_2

%for_step_2:
    $t_8 = move $i
    $i = add $i 1
    jump %for_cond_2

%for_loop_3:
    $t_9 = mul $i 8
    $t_9 = add @chunks $t_9
    $t_9 = load 8 $t_9 8
    $t_10 = mul $j 8
    $t_10 = add $t_9 $t_10
    store 8 $t_10 0 8
    jump %for_step_3

%for_step_3:
    $t_11 = move $j
    $j = add $j 1
    jump %for_cond_3

%for_after_2:
    $i = move 0
    jump %for_cond_4

%for_cond_4:
    $t_12 = slt $i $length
    br $t_12 %for_loop_4 %for_after_4

%for_after_4:
    $t_13 = div $i 64
    $t_14 = mul $t_13 8
    $t_14 = add @chunks $t_14
    $t_14 = load 8 $t_14 8
    $t_15 = rem $i 64
    $t_16 = div $t_15 4
    $t_17 = mul $t_16 8
    $t_17 = add $t_14 $t_17
    $t_17 = load 8 $t_17 8
    $t_18 = rem $i 4
    $t_19 = sub 3 $t_18
    $t_20 = mul $t_19 8
    $t_21 = shl 128 $t_20
    $t_22 = or $t_17 $t_21
    $t_23 = div $i 64
    $t_24 = mul $t_23 8
    $t_24 = add @chunks $t_24
    $t_24 = load 8 $t_24 8
    $t_25 = rem $i 64
    $t_26 = div $t_25 4
    $t_27 = mul $t_26 8
    $t_27 = add $t_24 $t_27
    store 8 $t_27 $t_22 8
    $t_28 = shl $length 3
    $t_29 = sub $nChunk 1
    $t_30 = mul $t_29 8
    $t_30 = add @chunks $t_30
    $t_30 = load 8 $t_30 8
    $t_31 = add $t_30 120
    store 8 $t_31 $t_28 8
    $t_32 = ashr $length 29
    $t_33 = and $t_32 7
    $t_34 = sub $nChunk 1
    $t_35 = mul $t_34 8
    $t_35 = add @chunks $t_35
    $t_35 = load 8 $t_35 8
    $t_36 = add $t_35 112
    store 8 $t_36 $t_33 8
    $h0 = move 1732584193
    $lo = move 43913
    $hi = move 61389
    $t_37 = shl $hi 16
    $t_38 = or $lo $t_37
    jump %lohi.entry

%lohi.entry:
    $t_39 = move $t_38
    $h1 = move $t_39
    $lo_2 = move 56574
    $hi_2 = move 39098
    $t_40 = shl $hi_2 16
    $t_41 = or $lo_2 $t_40
    jump %lohi.entry_2

%lohi.entry_2:
    $t_42 = move $t_41
    $h2 = move $t_42
    $h3 = move 271733878
    $lo_3 = move 57840
    $hi_3 = move 50130
    $t_43 = shl $hi_3 16
    $t_44 = or $lo_3 $t_43
    jump %lohi.entry_3

%lohi.entry_3:
    $t_45 = move $t_44
    $h4 = move $t_45
    $i = move 0
    jump %for_cond_5

%for_cond_5:
    $t_46 = slt $i $nChunk
    br $t_46 %for_loop_5 %for_after_5

%for_loop_5:
    $j = move 16
    jump %for_cond_6

%for_cond_6:
    $t_47 = slt $j 80
    br $t_47 %for_loop_6 %for_after_6

%for_after_6:
    $a = move $h0
    $b = move $h1
    $c = move $h2
    $d = move $h3
    $e = move $h4
    $j = move 0
    jump %for_cond_7

%for_cond_7:
    $t_48 = slt $j 80
    br $t_48 %for_loop_7 %for_after_7

%for_after_7:
    $x = move $h0
    $y = move $a
    $t_49 = and $x 65535
    $t_50 = and $y 65535
    $t_51 = add $t_49 $t_50
    $low = move $t_51
    $t_52 = ashr $x 16
    $t_53 = and $t_52 65535
    $t_54 = ashr $y 16
    $t_55 = and $t_54 65535
    $t_56 = add $t_53 $t_55
    $t_57 = ashr $low 16
    $t_58 = add $t_56 $t_57
    $t_59 = and $t_58 65535
    $high = move $t_59
    $t_60 = shl $high 16
    $t_61 = and $low 65535
    $t_62 = or $t_60 $t_61
    jump %add.entry

%add.entry:
    $t_63 = move $t_62
    $h0 = move $t_63
    $x_2 = move $h1
    $y_2 = move $b
    $t_64 = and $x_2 65535
    $t_65 = and $y_2 65535
    $t_66 = add $t_64 $t_65
    $low_2 = move $t_66
    $t_67 = ashr $x_2 16
    $t_68 = and $t_67 65535
    $t_69 = ashr $y_2 16
    $t_70 = and $t_69 65535
    $t_71 = add $t_68 $t_70
    $t_72 = ashr $low_2 16
    $t_73 = add $t_71 $t_72
    $t_74 = and $t_73 65535
    $high_2 = move $t_74
    $t_75 = shl $high_2 16
    $t_76 = and $low_2 65535
    $t_77 = or $t_75 $t_76
    jump %add.entry_2

%add.entry_2:
    $t_78 = move $t_77
    $h1 = move $t_78
    $x_3 = move $h2
    $y_3 = move $c
    $t_79 = and $x_3 65535
    $t_80 = and $y_3 65535
    $t_81 = add $t_79 $t_80
    $low_3 = move $t_81
    $t_82 = ashr $x_3 16
    $t_83 = and $t_82 65535
    $t_84 = ashr $y_3 16
    $t_85 = and $t_84 65535
    $t_86 = add $t_83 $t_85
    $t_87 = ashr $low_3 16
    $t_88 = add $t_86 $t_87
    $t_89 = and $t_88 65535
    $high_3 = move $t_89
    $t_90 = shl $high_3 16
    $t_91 = and $low_3 65535
    $t_92 = or $t_90 $t_91
    jump %add.entry_3

%add.entry_3:
    $t_93 = move $t_92
    $h2 = move $t_93
    $x_4 = move $h3
    $y_4 = move $d
    $t_94 = and $x_4 65535
    $t_95 = and $y_4 65535
    $t_96 = add $t_94 $t_95
    $low_4 = move $t_96
    $t_97 = ashr $x_4 16
    $t_98 = and $t_97 65535
    $t_99 = ashr $y_4 16
    $t_100 = and $t_99 65535
    $t_101 = add $t_98 $t_100
    $t_102 = ashr $low_4 16
    $t_103 = add $t_101 $t_102
    $t_104 = and $t_103 65535
    $high_4 = move $t_104
    $t_105 = shl $high_4 16
    $t_106 = and $low_4 65535
    $t_107 = or $t_105 $t_106
    jump %add.entry_4

%add.entry_4:
    $t_108 = move $t_107
    $h3 = move $t_108
    $x_5 = move $h4
    $y_5 = move $e
    $t_109 = and $x_5 65535
    $t_110 = and $y_5 65535
    $t_111 = add $t_109 $t_110
    $low_5 = move $t_111
    $t_112 = ashr $x_5 16
    $t_113 = and $t_112 65535
    $t_114 = ashr $y_5 16
    $t_115 = and $t_114 65535
    $t_116 = add $t_113 $t_115
    $t_117 = ashr $low_5 16
    $t_118 = add $t_116 $t_117
    $t_119 = and $t_118 65535
    $high_5 = move $t_119
    $t_120 = shl $high_5 16
    $t_121 = and $low_5 65535
    $t_122 = or $t_120 $t_121
    jump %add.entry_5

%add.entry_5:
    $t_123 = move $t_122
    $h4 = move $t_123
    jump %for_step_4

%for_step_4:
    $t_124 = move $i
    $i = add $i 1
    jump %for_cond_5

%for_loop_7:
    $f = move 0
    $k = move 0
    $t_125 = slt $j 20
    br $t_125 %if_true_5 %if_false_4

%if_true_5:
    $t_126 = and $b $c
    $t_127 = not $b
    $t_128 = and $t_127 $d
    $t_129 = or $t_126 $t_128
    $f = move $t_129
    $k = move 1518500249
    jump %if_after_5

%if_false_4:
    $t_130 = slt $j 40
    br $t_130 %if_true_6 %if_false_5

%if_true_6:
    $t_131 = xor $b $c
    $t_132 = xor $t_131 $d
    $f = move $t_132
    $k = move 1859775393
    jump %if_after_6

%if_false_5:
    $t_133 = slt $j 60
    br $t_133 %if_true_7 %if_false_6

%if_false_6:
    $t_134 = xor $b $c
    $t_135 = xor $t_134 $d
    $f = move $t_135
    $lo_4 = move 49622
    $hi_4 = move 51810
    $t_136 = shl $hi_4 16
    $t_137 = or $lo_4 $t_136
    jump %lohi.entry_4

%lohi.entry_4:
    $t_138 = move $t_137
    $k = move $t_138
    jump %if_after_7

%if_true_7:
    $t_139 = and $b $c
    $t_140 = and $b $d
    $t_141 = or $t_139 $t_140
    $t_142 = and $c $d
    $t_143 = or $t_141 $t_142
    $f = move $t_143
    $lo_5 = move 48348
    $hi_5 = move 36635
    $t_144 = shl $hi_5 16
    $t_145 = or $lo_5 $t_144
    jump %lohi.entry_5

%lohi.entry_5:
    $t_146 = move $t_145
    $k = move $t_146
    jump %if_after_7

%if_after_7:
    jump %if_after_6

%if_after_6:
    jump %if_after_5

%if_after_5:
    $x_6 = move $a
    $shift = move 5
    $t_147 = seq $shift 1
    br $t_147 %if_true_8 %if_after_8

%if_after_8:
    $t_148 = seq $shift 31
    br $t_148 %if_true_9 %if_after_9

%if_true_9:
    $t_149 = and $x_6 1
    $t_150 = shl $t_149 31
    $t_151 = ashr $x_6 1
    $t_152 = and $t_151 2147483647
    $t_153 = or $t_150 $t_152
    $returnValue_2 = move $t_153
    jump %rotate_left.exit

%if_after_9:
    $t_154 = sub 32 $shift
    $t_155 = shl 1 $t_154
    $t_156 = sub $t_155 1
    $t_157 = and $x_6 $t_156
    $t_158 = shl $t_157 $shift
    $t_159 = sub 32 $shift
    $t_160 = ashr $x_6 $t_159
    $t_161 = shl 1 $shift
    $t_162 = sub $t_161 1
    $t_163 = and $t_160 $t_162
    $t_164 = or $t_158 $t_163
    $returnValue_2 = move $t_164
    jump %rotate_left.exit

%if_true_8:
    $t_165 = and $x_6 2147483647
    $t_166 = shl $t_165 1
    $t_167 = ashr $x_6 31
    $t_168 = and $t_167 1
    $t_169 = or $t_166 $t_168
    $returnValue_2 = move $t_169
    jump %rotate_left.exit

%rotate_left.exit:
    $t_170 = move $returnValue_2
    $x_7 = move $t_170
    $y_6 = move $e
    $t_171 = and $x_7 65535
    $t_172 = and $y_6 65535
    $t_173 = add $t_171 $t_172
    $low_6 = move $t_173
    $t_174 = ashr $x_7 16
    $t_175 = and $t_174 65535
    $t_176 = ashr $y_6 16
    $t_177 = and $t_176 65535
    $t_178 = add $t_175 $t_177
    $t_179 = ashr $low_6 16
    $t_180 = add $t_178 $t_179
    $t_181 = and $t_180 65535
    $high_6 = move $t_181
    $t_182 = shl $high_6 16
    $t_183 = and $low_6 65535
    $t_184 = or $t_182 $t_183
    jump %add.entry_6

%add.entry_6:
    $t_185 = move $t_184
    $x_8 = move $f
    $y_7 = move $k
    $t_186 = and $x_8 65535
    $t_187 = and $y_7 65535
    $t_188 = add $t_186 $t_187
    $low_7 = move $t_188
    $t_189 = ashr $x_8 16
    $t_190 = and $t_189 65535
    $t_191 = ashr $y_7 16
    $t_192 = and $t_191 65535
    $t_193 = add $t_190 $t_192
    $t_194 = ashr $low_7 16
    $t_195 = add $t_193 $t_194
    $t_196 = and $t_195 65535
    $high_7 = move $t_196
    $t_197 = shl $high_7 16
    $t_198 = and $low_7 65535
    $t_199 = or $t_197 $t_198
    jump %add.entry_7

%add.entry_7:
    $t_200 = move $t_199
    $x_9 = move $t_185
    $y_8 = move $t_200
    $t_201 = and $x_9 65535
    $t_202 = and $y_8 65535
    $t_203 = add $t_201 $t_202
    $low_8 = move $t_203
    $t_204 = ashr $x_9 16
    $t_205 = and $t_204 65535
    $t_206 = ashr $y_8 16
    $t_207 = and $t_206 65535
    $t_208 = add $t_205 $t_207
    $t_209 = ashr $low_8 16
    $t_210 = add $t_208 $t_209
    $t_211 = and $t_210 65535
    $high_8 = move $t_211
    $t_212 = shl $high_8 16
    $t_213 = and $low_8 65535
    $t_214 = or $t_212 $t_213
    jump %add.entry_8

%add.entry_8:
    $t_215 = move $t_214
    $t_216 = mul $i 8
    $t_216 = add @chunks $t_216
    $t_216 = load 8 $t_216 8
    $t_217 = mul $j 8
    $t_217 = add $t_216 $t_217
    $t_217 = load 8 $t_217 8
    $x_10 = move $t_215
    $y_9 = move $t_217
    $t_218 = and $x_10 65535
    $t_219 = and $y_9 65535
    $t_220 = add $t_218 $t_219
    $low_9 = move $t_220
    $t_221 = ashr $x_10 16
    $t_222 = and $t_221 65535
    $t_223 = ashr $y_9 16
    $t_224 = and $t_223 65535
    $t_225 = add $t_222 $t_224
    $t_226 = ashr $low_9 16
    $t_227 = add $t_225 $t_226
    $t_228 = and $t_227 65535
    $high_9 = move $t_228
    $t_229 = shl $high_9 16
    $t_230 = and $low_9 65535
    $t_231 = or $t_229 $t_230
    jump %add.entry_9

%add.entry_9:
    $t_232 = move $t_231
    $temp = move $t_232
    $e = move $d
    $d = move $c
    $x_11 = move $b
    $shift_2 = move 30
    $t_233 = seq $shift_2 1
    br $t_233 %if_true_10 %if_after_10

%if_true_10:
    $t_234 = and $x_11 2147483647
    $t_235 = shl $t_234 1
    $t_236 = ashr $x_11 31
    $t_237 = and $t_236 1
    $t_238 = or $t_235 $t_237
    $returnValue_3 = move $t_238
    jump %rotate_left.exit_2

%if_after_10:
    $t_239 = seq $shift_2 31
    br $t_239 %if_true_11 %if_after_11

%if_true_11:
    $t_240 = and $x_11 1
    $t_241 = shl $t_240 31
    $t_242 = ashr $x_11 1
    $t_243 = and $t_242 2147483647
    $t_244 = or $t_241 $t_243
    $returnValue_3 = move $t_244
    jump %rotate_left.exit_2

%if_after_11:
    $t_245 = sub 32 $shift_2
    $t_246 = shl 1 $t_245
    $t_247 = sub $t_246 1
    $t_248 = and $x_11 $t_247
    $t_249 = shl $t_248 $shift_2
    $t_250 = sub 32 $shift_2
    $t_251 = ashr $x_11 $t_250
    $t_252 = shl 1 $shift_2
    $t_253 = sub $t_252 1
    $t_254 = and $t_251 $t_253
    $t_255 = or $t_249 $t_254
    $returnValue_3 = move $t_255
    jump %rotate_left.exit_2

%rotate_left.exit_2:
    $t_256 = move $returnValue_3
    $c = move $t_256
    $b = move $a
    $a = move $temp
    jump %for_step_5

%for_step_5:
    $t_257 = move $j
    $j = add $j 1
    jump %for_cond_7

%for_loop_6:
    $t_258 = mul $i 8
    $t_258 = add @chunks $t_258
    $t_258 = load 8 $t_258 8
    $t_259 = sub $j 3
    $t_260 = mul $t_259 8
    $t_260 = add $t_258 $t_260
    $t_260 = load 8 $t_260 8
    $t_261 = mul $i 8
    $t_261 = add @chunks $t_261
    $t_261 = load 8 $t_261 8
    $t_262 = sub $j 8
    $t_263 = mul $t_262 8
    $t_263 = add $t_261 $t_263
    $t_263 = load 8 $t_263 8
    $t_264 = xor $t_260 $t_263
    $t_265 = mul $i 8
    $t_265 = add @chunks $t_265
    $t_265 = load 8 $t_265 8
    $t_266 = sub $j 14
    $t_267 = mul $t_266 8
    $t_267 = add $t_265 $t_267
    $t_267 = load 8 $t_267 8
    $t_268 = xor $t_264 $t_267
    $t_269 = mul $i 8
    $t_269 = add @chunks $t_269
    $t_269 = load 8 $t_269 8
    $t_270 = sub $j 16
    $t_271 = mul $t_270 8
    $t_271 = add $t_269 $t_271
    $t_271 = load 8 $t_271 8
    $t_272 = xor $t_268 $t_271
    $x_12 = move $t_272
    $shift_3 = move 1
    $t_273 = seq $shift_3 1
    br $t_273 %if_true_12 %if_after_12

%if_true_12:
    $t_274 = and $x_12 2147483647
    $t_275 = shl $t_274 1
    $t_276 = ashr $x_12 31
    $t_277 = and $t_276 1
    $t_278 = or $t_275 $t_277
    $returnValue_4 = move $t_278
    jump %rotate_left.exit_3

%if_after_12:
    $t_279 = seq $shift_3 31
    br $t_279 %if_true_13 %if_after_13

%if_true_13:
    $t_280 = and $x_12 1
    $t_281 = shl $t_280 31
    $t_282 = ashr $x_12 1
    $t_283 = and $t_282 2147483647
    $t_284 = or $t_281 $t_283
    $returnValue_4 = move $t_284
    jump %rotate_left.exit_3

%if_after_13:
    $t_285 = sub 32 $shift_3
    $t_286 = shl 1 $t_285
    $t_287 = sub $t_286 1
    $t_288 = and $x_12 $t_287
    $t_289 = shl $t_288 $shift_3
    $t_290 = sub 32 $shift_3
    $t_291 = ashr $x_12 $t_290
    $t_292 = shl 1 $shift_3
    $t_293 = sub $t_292 1
    $t_294 = and $t_291 $t_293
    $t_295 = or $t_289 $t_294
    $returnValue_4 = move $t_295
    jump %rotate_left.exit_3

%rotate_left.exit_3:
    $t_296 = move $returnValue_4
    $t_297 = mul $i 8
    $t_297 = add @chunks $t_297
    $t_297 = load 8 $t_297 8
    $t_298 = mul $j 8
    $t_298 = add $t_297 $t_298
    store 8 $t_298 $t_296 8
    jump %for_step_6

%for_step_6:
    $t_299 = move $j
    $j = add $j 1
    jump %for_cond_6

%for_after_5:
    $t_300 = add @outputBuffer 0
    store 8 $t_300 $h0 8
    $t_301 = add @outputBuffer 8
    store 8 $t_301 $h1 8
    $t_302 = add @outputBuffer 16
    store 8 $t_302 $h2 8
    $t_303 = add @outputBuffer 24
    store 8 $t_303 $h3 8
    $t_304 = add @outputBuffer 32
    store 8 $t_304 $h4 8
    $returnValue = move @outputBuffer
    jump %sha1.exit

%sha1.exit:
    ret $returnValue

%for_loop_4:
    $t_305 = div $i 64
    $t_306 = mul $t_305 8
    $t_306 = add @chunks $t_306
    $t_306 = load 8 $t_306 8
    $t_307 = rem $i 64
    $t_308 = div $t_307 4
    $t_309 = mul $t_308 8
    $t_309 = add $t_306 $t_309
    $t_309 = load 8 $t_309 8
    $t_310 = mul $i 8
    $t_310 = add $input $t_310
    $t_310 = load 8 $t_310 8
    $t_311 = rem $i 4
    $t_312 = sub 3 $t_311
    $t_313 = mul $t_312 8
    $t_314 = shl $t_310 $t_313
    $t_315 = or $t_309 $t_314
    $t_316 = div $i 64
    $t_317 = mul $t_316 8
    $t_317 = add @chunks $t_317
    $t_317 = load 8 $t_317 8
    $t_318 = rem $i 64
    $t_319 = div $t_318 4
    $t_320 = mul $t_319 8
    $t_320 = add $t_317 $t_320
    store 8 $t_320 $t_315 8
    jump %for_step_7

%for_step_7:
    $t_321 = move $i
    $i = add $i 1
    jump %for_cond_4

}

func nextText $now $length {

%nextText.entry:
    $i = move 0
    $t = sub $length 1
    $i = move $t
    jump %for_cond_8

%for_cond_8:
    $t_2 = sge $i 0
    br $t_2 %for_loop_8 %for_after_8

%for_loop_8:
    $t_3 = mul $i 8
    $t_3 = add $now $t_3
    $t_3 = load 8 $t_3 8
    $now_2 = move $t_3
    $t_4 = seq $now_2 122
    br $t_4 %if_true_14 %if_after_14

%if_true_14:
    $t_5 = neg 1
    $returnValue = move $t_5
    jump %nextLetter.exit

%if_after_14:
    $t_6 = seq $now_2 90
    br $t_6 %if_true_15 %if_after_15

%if_after_15:
    $t_7 = seq $now_2 57
    br $t_7 %if_true_16 %if_after_16

%if_after_16:
    $t_8 = add $now_2 1
    $returnValue = move $t_8
    jump %nextLetter.exit

%if_true_16:
    $returnValue = move 65
    jump %nextLetter.exit

%if_true_15:
    $returnValue = move 97
    jump %nextLetter.exit

%nextLetter.exit:
    $t_9 = move $returnValue
    $t_10 = mul $i 8
    $t_10 = add $now $t_10
    store 8 $t_10 $t_9 8
    $t_11 = mul $i 8
    $t_11 = add $now $t_11
    $t_11 = load 8 $t_11 8
    $t_12 = neg 1
    $t_13 = seq $t_11 $t_12
    br $t_13 %if_true_17 %if_false_7

%if_false_7:
    $returnValue_2 = move 1
    jump %nextText.exit

%if_true_17:
    $t_14 = mul $i 8
    $t_14 = add $now $t_14
    store 8 $t_14 48 8
    jump %if_after_17

%if_after_17:
    jump %for_step_8

%for_step_8:
    $t_15 = move $i
    $i = sub $i 1
    jump %for_cond_8

%for_after_8:
    $returnValue_2 = move 0
    jump %nextText.exit

%nextText.exit:
    ret $returnValue_2

}

func main {

%main.entry:
    @asciiTable = move @string
    @MAXCHUNK = move 100
    $t = sub @MAXCHUNK 1
    $t_2 = mul $t 64
    $t_3 = sub $t_2 16
    @MAXLENGTH = move $t_3
    $newaddress = mul @MAXCHUNK 8
    $newaddress = add $newaddress 8
    $newaddress = alloc $newaddress
    store 8 $newaddress @MAXCHUNK 0
    $myloopvariable = move 0
    jump %for_cond_9

%for_cond_9:
    $t_4 = slt $myloopvariable @MAXCHUNK
    br $t_4 %for_loop_9 %for_after_9

%for_loop_9:
    $newaddress_2 = move 648
    $newaddress_2 = alloc $newaddress_2
    store 8 $newaddress_2 80 0
    $t_5 = mul $myloopvariable 8
    $t_5 = add $newaddress $t_5
    store 8 $t_5 $newaddress_2 8
    jump %for_step_9

%for_step_9:
    $myloopvariable = add $myloopvariable 1
    jump %for_cond_9

%for_after_9:
    @chunks = move $newaddress
    $newaddress_3 = mul @MAXLENGTH 8
    $newaddress_3 = add $newaddress_3 8
    $newaddress_3 = alloc $newaddress_3
    store 8 $newaddress_3 @MAXLENGTH 0
    @inputBuffer = move $newaddress_3
    $newaddress_4 = move 48
    $newaddress_4 = alloc $newaddress_4
    store 8 $newaddress_4 5 0
    @outputBuffer = move $newaddress_4
    $op = move 0
    $input = move 0
    jump %while_cond

%while_cond:
    jump %while_loop

%while_loop:
    $gottenint = call getInt 
    $op = move $gottenint
    $t_6 = seq $op 0
    br $t_6 %if_true_18 %if_after_18

%if_after_18:
    $t_7 = seq $op 1
    br $t_7 %if_true_19 %if_false_8

%if_false_8:
    $t_8 = seq $op 2
    br $t_8 %if_true_20 %if_after_19

%if_true_20:
    $gottenstring = call getString 
    $input = move $gottenstring
    $input_2 = move $input
    jump %crackSHA1.entry

%crackSHA1.entry:
    jump %if_after_19

%if_after_19:
    jump %if_after_20

%if_true_19:
    $gottenstring_2 = call getString 
    $input = move $gottenstring_2
    $input_3 = move $input
    $i = move 0
    $i = move 0
    jump %for_cond_10

%for_cond_10:
    $size = load 8 $input_3 0
    $t_9 = slt $i $size
    br $t_9 %for_loop_10 %for_after_10

%for_loop_10:
    $ord = call string.ord $input_3 $i 
    $t_10 = mul $i 8
    $t_10 = add @inputBuffer $t_10
    store 8 $t_10 $ord 8
    jump %for_step_10

%for_step_10:
    $t_11 = move $i
    $i = add $i 1
    jump %for_cond_10

%for_after_10:
    $size_2 = load 8 $input_3 0
    $t_12 = call sha1 @inputBuffer $size_2 
    $result = move $t_12
    $i = move 0
    jump %for_cond_11

%for_cond_11:
    $size_3 = load 8 $result 0
    $t_13 = slt $i $size_3
    br $t_13 %for_loop_11 %for_after_11

%for_after_11:
    call println @string_2 
    jump %if_after_20

%if_after_20:
    jump %while_cond

%for_loop_11:
    $t_14 = mul $i 8
    $t_14 = add $result $t_14
    $t_14 = load 8 $t_14 8
    $x = move $t_14
    $ret = move @string_2
    $i_2 = move 0
    $i_2 = move 28
    jump %for_cond_12

%for_cond_12:
    $t_15 = sge $i_2 0
    br $t_15 %for_loop_12 %for_after_12

%for_loop_12:
    $t_16 = ashr $x $i_2
    $t_17 = and $t_16 15
    $digit = move $t_17
    $t_18 = slt $digit 10
    br $t_18 %if_true_21 %if_false_9

%if_true_21:
    $t_19 = add 48 $digit
    $x_2 = move $t_19
    $t_20 = sge $x_2 32
    br $t_20 %lhs_true_4 %lhs_false_4

%lhs_true_4:
    $t_21 = sle $x_2 126
    $t_22 = move $t_21
    jump %lhs_merge_4

%lhs_false_4:
    $t_22 = move 0
    jump %lhs_merge_4

%lhs_merge_4:
    br $t_22 %if_true_22 %if_after_21

%if_true_22:
    $t_23 = sub $x_2 32
    $t_24 = sub $x_2 32
    $substr = call string.substring @asciiTable $t_23 $t_24 
    $returnValue = move $substr
    jump %int2chr.exit

%if_after_21:
    $returnValue = move @string_2
    jump %int2chr.exit

%int2chr.exit:
    $t_25 = move $returnValue
    $t_26 = call string.concat $ret $t_25 
    $ret = move $t_26
    jump %if_after_22

%if_false_9:
    $t_27 = add 65 $digit
    $t_28 = sub $t_27 10
    $x_3 = move $t_28
    $t_29 = sge $x_3 32
    br $t_29 %lhs_true_5 %lhs_false_5

%lhs_true_5:
    $t_30 = sle $x_3 126
    $t_31 = move $t_30
    jump %lhs_merge_5

%lhs_false_5:
    $t_31 = move 0
    jump %lhs_merge_5

%lhs_merge_5:
    br $t_31 %if_true_23 %if_after_23

%if_true_23:
    $t_32 = sub $x_3 32
    $t_33 = sub $x_3 32
    $substr_2 = call string.substring @asciiTable $t_32 $t_33 
    $returnValue_2 = move $substr_2
    jump %int2chr.exit_2

%if_after_23:
    $returnValue_2 = move @string_2
    jump %int2chr.exit_2

%int2chr.exit_2:
    $t_34 = move $returnValue_2
    $t_35 = call string.concat $ret $t_34 
    $ret = move $t_35
    jump %if_after_22

%if_after_22:
    jump %for_step_11

%for_step_11:
    $t_36 = sub $i_2 4
    $i_2 = move $t_36
    jump %for_cond_12

%for_after_12:
    $t_37 = move $ret
    call print $t_37 
    jump %for_step_12

%for_step_12:
    $t_38 = move $i
    $i = add $i 1
    jump %for_cond_11

%if_true_18:
    jump %while_after

%while_after:
    ret 0

}

